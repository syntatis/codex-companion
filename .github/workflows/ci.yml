name: ci

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - ".github/workflows/php.yml"
      - "**.php"
      - "composer.json"
      - "composer.lock"
      - "phpcs.xml.dist"
      - "phpstan.neon.dist"
      - "phpunit.xml.dist"
  push:
    branches:
      - main
    paths:
      - ".github/workflows/php.yml"
      - "**.php"
      - "composer.json"
      - "composer.lock"
      - "phpcs.xml.dist"
      - "phpstan.neon.dist"
      - "phpunit.xml.dist"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4

      - name: Install dependencies
        run: composer install --prefer-dist --no-ansi --no-interaction --no-progress

      - name: Run linter
        run: composer phpcs

  test:
    runs-on: ${{ matrix.machine }}
    strategy:
      fail-fast: true
      matrix:
        php-version: [7.4]
        install-preference: [prefer-lowest]
        machine: [windows-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Setup Composer cache
        uses: actions/cache@v4
        with:
          path: ${{ runner.os == 'Windows' && 'C:\Users\runneradmin\AppData\Local\Composer\files' || steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ matrix.php-version }}-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-${{ matrix.php-version }}-

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: composer:v2

      - name: Install dependencies
        run: |
          composer require composer/composer:2.0 --${{ matrix.install-preference }} --no-interaction --no-update --dev
          composer install --prefer-dist --no-ansi --no-interaction --no-progress

      - name: Run test
        run: |
          composer phpstan
          vendor/bin/phpunit --coverage-clover coverage.xml --group test-cli

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
